[
    {
        "text": "contract EtherStore {\n    uint256 public withdrawalLimit = 1 ether;\n    mapping(address => uint256) public lastWithdrawTime;\n    mapping(address => uint256) public balances;\n    \n    function depositFunds() public payable {\n        balances[msg.sender] += msg.value;\n    }\n    \n    function withdrawFunds (uint256 _weiToWithdraw) public {\n        require(balances[msg.sender] >= _weiToWithdraw);\n        // limit the withdrawal\n        require(_weiToWithdraw <= withdrawalLimit);\n        // limit the time allowed to withdraw\n        require(now >= lastWithdrawTime[msg.sender] + 1 weeks);\n        require(msg.sender.call.value(_weiToWithdraw)());\n        balances[msg.sender] -= _weiToWithdraw;\n        lastWithdrawTime[msg.sender] = now;\n    }\n }\n\n",
        "label": "Yes"
    },
    {
        "text": "\u200b\u200bcontract EtherStore {\n    mapping(address => uint256) public balances;\n\n    function transfer(address to, uint256 amount) external {\n        require(!lock);\n        lock = true;\n        if (balances[msg.sender] >= amount) {\n            balances[to] += amount;\n            balances[msg.sender] -= amount;\n        }\n        lock = false;\n    }\n\n    function withdraw() external {\n        require(!lock);\n        lock = true;\n        uint256 amount = balances[msg.sender];\n        require(msg.sender.call.value(amount)());\n        balances[msg.sender] = 0;\n        lock = false;\n    }\n}\n\n\n",
        "label": "No"
    }
]